Traceback (most recent call last):
  File "/home/sean/miniconda3/lib/python3.9/site-packages/jupyter_cache/executors/utils.py", line 58, in single_nb_execution
    executenb(
  File "/home/sean/miniconda3/lib/python3.9/site-packages/nbclient/client.py", line 1204, in execute
    return NotebookClient(nb=nb, resources=resources, km=km, **kwargs).execute()
  File "/home/sean/miniconda3/lib/python3.9/site-packages/nbclient/util.py", line 84, in wrapped
    return just_run(coro(*args, **kwargs))
  File "/home/sean/miniconda3/lib/python3.9/site-packages/nbclient/util.py", line 62, in just_run
    return loop.run_until_complete(coro)
  File "/home/sean/miniconda3/lib/python3.9/asyncio/base_events.py", line 647, in run_until_complete
    return future.result()
  File "/home/sean/miniconda3/lib/python3.9/site-packages/nbclient/client.py", line 663, in async_execute
    await self.async_execute_cell(
  File "/home/sean/miniconda3/lib/python3.9/site-packages/nbclient/client.py", line 965, in async_execute_cell
    await self._check_raise_for_error(cell, cell_index, exec_reply)
  File "/home/sean/miniconda3/lib/python3.9/site-packages/nbclient/client.py", line 862, in _check_raise_for_error
    raise CellExecutionError.from_cell_and_msg(cell, exec_reply_content)
nbclient.exceptions.CellExecutionError: An error occurred while executing the following cell:
------------------
trend_data = temp_data[temp_data["dt"] > 1960]
trend_ave = moving_ave_frame(trend_data, WINDOW)
lb, ub = lb_ub(
    trend_ave["monthly_anomaly"], trend_ave["monthly_anomaly_unc"]
)
trend_ave.to_csv(
    f"../output_files/temperature_{int(WINDOW/12)}" "_moving_average.csv"
)
trend_fit, trend_error = curve_fit(
    P1,
    trend_ave["dt"],
    trend_ave["monthly_anomaly"],
    sigma=trend_ave["monthly_anomaly_unc"],
)
gradient_lb, gradient_ub = lb_ub(trend_fit[1], trend_error[1, 1])
lb, ub = lb_ub(
    trend_ave["monthly_anomaly"], trend_ave["monthly_anomaly_unc"]
)
# Plotting
fig, ax = plt.subplots(1, 1, figsize=(10, 6))
time = np.linspace(2017.3, 2055, 300)
trend_lb = trend_fit - np.diagonal(trend_error)
trend_ub = trend_fit + np.diagonal(trend_error)
plt.fill_between(
    trend_ave["dt"], lb, ub, alpha=0.2, color=colours.durham.ink
)
plt.plot(
    trend_ave["dt"],
    trend_ave["monthly_anomaly"],
    c=colours.durham.ink,
    label="Moving Average",
)
plt.plot(
    time,
    P1(time, *trend_fit),
    linestyle="--",
    color=colours.durham.ink,
    label="Linear Trend",
)
ax.set_xlabel("Window Midpoint (Year)")
ax.set_ylabel(
    f"{int(WINDOW / 12)} Year Moving Average of \n"
    r"Land Average Temperature Anomaly $(^{\circ}\textrm{{C}})$"
)
# Warming Targets
x = np.linspace(1960, 2055, 100)
y = np.ones_like(x)
plt.plot(
    x,
    y * 1.5,
    color=colours.durham.red,
    label="$1.5^\circ C$ Warming",
    linestyle="--",
)
plt.plot(
    x,
    y * 2,
    color=colours.durham.red,
    label="$2.0^\circ C$ Warming",
    linestyle="-.",
)
plt.fill_between(time, P1(time, *trend_lb), P1(time, *trend_ub))
plt.legend();
------------------

[0;31m---------------------------------------------------------------------------[0m
[0;31mOSError[0m                                   Traceback (most recent call last)
Input [0;32mIn [6][0m, in [0;36m<cell line: 6>[0;34m()[0m
[1;32m      2[0m trend_ave [38;5;241m=[39m moving_ave_frame(trend_data, WINDOW)
[1;32m      3[0m lb, ub [38;5;241m=[39m lb_ub(
[1;32m      4[0m     trend_ave[[38;5;124m"[39m[38;5;124mmonthly_anomaly[39m[38;5;124m"[39m], trend_ave[[38;5;124m"[39m[38;5;124mmonthly_anomaly_unc[39m[38;5;124m"[39m]
[1;32m      5[0m )
[0;32m----> 6[0m [43mtrend_ave[49m[38;5;241;43m.[39;49m[43mto_csv[49m[43m([49m
[1;32m      7[0m [43m    [49m[38;5;124;43mf[39;49m[38;5;124;43m"[39;49m[38;5;124;43m../output_files/temperature_[39;49m[38;5;132;43;01m{[39;49;00m[38;5;28;43mint[39;49m[43m([49m[43mWINDOW[49m[38;5;241;43m/[39;49m[38;5;241;43m12[39;49m[43m)[49m[38;5;132;43;01m}[39;49;00m[38;5;124;43m"[39;49m[43m [49m[38;5;124;43m"[39;49m[38;5;124;43m_moving_average.csv[39;49m[38;5;124;43m"[39;49m
[1;32m      8[0m [43m)[49m
[1;32m      9[0m trend_fit, trend_error [38;5;241m=[39m curve_fit(
[1;32m     10[0m     P1,
[1;32m     11[0m     trend_ave[[38;5;124m"[39m[38;5;124mdt[39m[38;5;124m"[39m],
[1;32m     12[0m     trend_ave[[38;5;124m"[39m[38;5;124mmonthly_anomaly[39m[38;5;124m"[39m],
[1;32m     13[0m     sigma[38;5;241m=[39mtrend_ave[[38;5;124m"[39m[38;5;124mmonthly_anomaly_unc[39m[38;5;124m"[39m],
[1;32m     14[0m )
[1;32m     15[0m gradient_lb, gradient_ub [38;5;241m=[39m lb_ub(trend_fit[[38;5;241m1[39m], trend_error[[38;5;241m1[39m, [38;5;241m1[39m])

File [0;32m~/miniconda3/lib/python3.9/site-packages/pandas/util/_decorators.py:211[0m, in [0;36mdeprecate_kwarg.<locals>._deprecate_kwarg.<locals>.wrapper[0;34m(*args, **kwargs)[0m
[1;32m    209[0m     [38;5;28;01melse[39;00m:
[1;32m    210[0m         kwargs[new_arg_name] [38;5;241m=[39m new_arg_value
[0;32m--> 211[0m [38;5;28;01mreturn[39;00m [43mfunc[49m[43m([49m[38;5;241;43m*[39;49m[43margs[49m[43m,[49m[43m [49m[38;5;241;43m*[39;49m[38;5;241;43m*[39;49m[43mkwargs[49m[43m)[49m

File [0;32m~/miniconda3/lib/python3.9/site-packages/pandas/core/generic.py:3720[0m, in [0;36mNDFrame.to_csv[0;34m(self, path_or_buf, sep, na_rep, float_format, columns, header, index, index_label, mode, encoding, compression, quoting, quotechar, lineterminator, chunksize, date_format, doublequote, escapechar, decimal, errors, storage_options)[0m
[1;32m   3709[0m df [38;5;241m=[39m [38;5;28mself[39m [38;5;28;01mif[39;00m [38;5;28misinstance[39m([38;5;28mself[39m, ABCDataFrame) [38;5;28;01melse[39;00m [38;5;28mself[39m[38;5;241m.[39mto_frame()
[1;32m   3711[0m formatter [38;5;241m=[39m DataFrameFormatter(
[1;32m   3712[0m     frame[38;5;241m=[39mdf,
[1;32m   3713[0m     header[38;5;241m=[39mheader,
[0;32m   (...)[0m
[1;32m   3717[0m     decimal[38;5;241m=[39mdecimal,
[1;32m   3718[0m )
[0;32m-> 3720[0m [38;5;28;01mreturn[39;00m [43mDataFrameRenderer[49m[43m([49m[43mformatter[49m[43m)[49m[38;5;241;43m.[39;49m[43mto_csv[49m[43m([49m
[1;32m   3721[0m [43m    [49m[43mpath_or_buf[49m[43m,[49m
[1;32m   3722[0m [43m    [49m[43mlineterminator[49m[38;5;241;43m=[39;49m[43mlineterminator[49m[43m,[49m
[1;32m   3723[0m [43m    [49m[43msep[49m[38;5;241;43m=[39;49m[43msep[49m[43m,[49m
[1;32m   3724[0m [43m    [49m[43mencoding[49m[38;5;241;43m=[39;49m[43mencoding[49m[43m,[49m
[1;32m   3725[0m [43m    [49m[43merrors[49m[38;5;241;43m=[39;49m[43merrors[49m[43m,[49m
[1;32m   3726[0m [43m    [49m[43mcompression[49m[38;5;241;43m=[39;49m[43mcompression[49m[43m,[49m
[1;32m   3727[0m [43m    [49m[43mquoting[49m[38;5;241;43m=[39;49m[43mquoting[49m[43m,[49m
[1;32m   3728[0m [43m    [49m[43mcolumns[49m[38;5;241;43m=[39;49m[43mcolumns[49m[43m,[49m
[1;32m   3729[0m [43m    [49m[43mindex_label[49m[38;5;241;43m=[39;49m[43mindex_label[49m[43m,[49m
[1;32m   3730[0m [43m    [49m[43mmode[49m[38;5;241;43m=[39;49m[43mmode[49m[43m,[49m
[1;32m   3731[0m [43m    [49m[43mchunksize[49m[38;5;241;43m=[39;49m[43mchunksize[49m[43m,[49m
[1;32m   3732[0m [43m    [49m[43mquotechar[49m[38;5;241;43m=[39;49m[43mquotechar[49m[43m,[49m
[1;32m   3733[0m [43m    [49m[43mdate_format[49m[38;5;241;43m=[39;49m[43mdate_format[49m[43m,[49m
[1;32m   3734[0m [43m    [49m[43mdoublequote[49m[38;5;241;43m=[39;49m[43mdoublequote[49m[43m,[49m
[1;32m   3735[0m [43m    [49m[43mescapechar[49m[38;5;241;43m=[39;49m[43mescapechar[49m[43m,[49m
[1;32m   3736[0m [43m    [49m[43mstorage_options[49m[38;5;241;43m=[39;49m[43mstorage_options[49m[43m,[49m
[1;32m   3737[0m [43m[49m[43m)[49m

File [0;32m~/miniconda3/lib/python3.9/site-packages/pandas/util/_decorators.py:211[0m, in [0;36mdeprecate_kwarg.<locals>._deprecate_kwarg.<locals>.wrapper[0;34m(*args, **kwargs)[0m
[1;32m    209[0m     [38;5;28;01melse[39;00m:
[1;32m    210[0m         kwargs[new_arg_name] [38;5;241m=[39m new_arg_value
[0;32m--> 211[0m [38;5;28;01mreturn[39;00m [43mfunc[49m[43m([49m[38;5;241;43m*[39;49m[43margs[49m[43m,[49m[43m [49m[38;5;241;43m*[39;49m[38;5;241;43m*[39;49m[43mkwargs[49m[43m)[49m

File [0;32m~/miniconda3/lib/python3.9/site-packages/pandas/io/formats/format.py:1189[0m, in [0;36mDataFrameRenderer.to_csv[0;34m(self, path_or_buf, encoding, sep, columns, index_label, mode, compression, quoting, quotechar, lineterminator, chunksize, date_format, doublequote, escapechar, errors, storage_options)[0m
[1;32m   1168[0m     created_buffer [38;5;241m=[39m [38;5;28;01mFalse[39;00m
[1;32m   1170[0m csv_formatter [38;5;241m=[39m CSVFormatter(
[1;32m   1171[0m     path_or_buf[38;5;241m=[39mpath_or_buf,
[1;32m   1172[0m     lineterminator[38;5;241m=[39mlineterminator,
[0;32m   (...)[0m
[1;32m   1187[0m     formatter[38;5;241m=[39m[38;5;28mself[39m[38;5;241m.[39mfmt,
[1;32m   1188[0m )
[0;32m-> 1189[0m [43mcsv_formatter[49m[38;5;241;43m.[39;49m[43msave[49m[43m([49m[43m)[49m
[1;32m   1191[0m [38;5;28;01mif[39;00m created_buffer:
[1;32m   1192[0m     [38;5;28;01massert[39;00m [38;5;28misinstance[39m(path_or_buf, StringIO)

File [0;32m~/miniconda3/lib/python3.9/site-packages/pandas/io/formats/csvs.py:241[0m, in [0;36mCSVFormatter.save[0;34m(self)[0m
[1;32m    237[0m [38;5;124;03m"""[39;00m
[1;32m    238[0m [38;5;124;03mCreate the writer & save.[39;00m
[1;32m    239[0m [38;5;124;03m"""[39;00m
[1;32m    240[0m [38;5;66;03m# apply compression and byte/text conversion[39;00m
[0;32m--> 241[0m [38;5;28;01mwith[39;00m [43mget_handle[49m[43m([49m
[1;32m    242[0m [43m    [49m[38;5;28;43mself[39;49m[38;5;241;43m.[39;49m[43mfilepath_or_buffer[49m[43m,[49m
[1;32m    243[0m [43m    [49m[38;5;28;43mself[39;49m[38;5;241;43m.[39;49m[43mmode[49m[43m,[49m
[1;32m    244[0m [43m    [49m[43mencoding[49m[38;5;241;43m=[39;49m[38;5;28;43mself[39;49m[38;5;241;43m.[39;49m[43mencoding[49m[43m,[49m
[1;32m    245[0m [43m    [49m[43merrors[49m[38;5;241;43m=[39;49m[38;5;28;43mself[39;49m[38;5;241;43m.[39;49m[43merrors[49m[43m,[49m
[1;32m    246[0m [43m    [49m[43mcompression[49m[38;5;241;43m=[39;49m[38;5;28;43mself[39;49m[38;5;241;43m.[39;49m[43mcompression[49m[43m,[49m
[1;32m    247[0m [43m    [49m[43mstorage_options[49m[38;5;241;43m=[39;49m[38;5;28;43mself[39;49m[38;5;241;43m.[39;49m[43mstorage_options[49m[43m,[49m
[1;32m    248[0m [43m[49m[43m)[49m [38;5;28;01mas[39;00m handles:
[1;32m    249[0m 
[1;32m    250[0m     [38;5;66;03m# Note: self.encoding is irrelevant here[39;00m
[1;32m    251[0m     [38;5;28mself[39m[38;5;241m.[39mwriter [38;5;241m=[39m csvlib[38;5;241m.[39mwriter(
[1;32m    252[0m         handles[38;5;241m.[39mhandle,
[1;32m    253[0m         lineterminator[38;5;241m=[39m[38;5;28mself[39m[38;5;241m.[39mlineterminator,
[0;32m   (...)[0m
[1;32m    258[0m         quotechar[38;5;241m=[39m[38;5;28mself[39m[38;5;241m.[39mquotechar,
[1;32m    259[0m     )
[1;32m    261[0m     [38;5;28mself[39m[38;5;241m.[39m_save()

File [0;32m~/miniconda3/lib/python3.9/site-packages/pandas/io/common.py:734[0m, in [0;36mget_handle[0;34m(path_or_buf, mode, encoding, compression, memory_map, is_text, errors, storage_options)[0m
[1;32m    732[0m [38;5;66;03m# Only for write methods[39;00m
[1;32m    733[0m [38;5;28;01mif[39;00m [38;5;124m"[39m[38;5;124mr[39m[38;5;124m"[39m [38;5;129;01mnot[39;00m [38;5;129;01min[39;00m mode [38;5;129;01mand[39;00m is_path:
[0;32m--> 734[0m     [43mcheck_parent_directory[49m[43m([49m[38;5;28;43mstr[39;49m[43m([49m[43mhandle[49m[43m)[49m[43m)[49m
[1;32m    736[0m [38;5;28;01mif[39;00m compression:
[1;32m    737[0m     [38;5;28;01mif[39;00m compression [38;5;241m!=[39m [38;5;124m"[39m[38;5;124mzstd[39m[38;5;124m"[39m:
[1;32m    738[0m         [38;5;66;03m# compression libraries do not like an explicit text-mode[39;00m

File [0;32m~/miniconda3/lib/python3.9/site-packages/pandas/io/common.py:597[0m, in [0;36mcheck_parent_directory[0;34m(path)[0m
[1;32m    595[0m parent [38;5;241m=[39m Path(path)[38;5;241m.[39mparent
[1;32m    596[0m [38;5;28;01mif[39;00m [38;5;129;01mnot[39;00m parent[38;5;241m.[39mis_dir():
[0;32m--> 597[0m     [38;5;28;01mraise[39;00m [38;5;167;01mOSError[39;00m([38;5;124mrf[39m[38;5;124m"[39m[38;5;124mCannot save file into a non-existent directory: [39m[38;5;124m'[39m[38;5;132;01m{[39;00mparent[38;5;132;01m}[39;00m[38;5;124m'[39m[38;5;124m"[39m)

[0;31mOSError[0m: Cannot save file into a non-existent directory: '../output_files'
OSError: Cannot save file into a non-existent directory: '../output_files'

